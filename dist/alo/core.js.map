{"version":3,"sources":["webpack://alo.[name]/webpack/universalModuleDefinition","webpack://alo.[name]/webpack/bootstrap","webpack://alo.[name]/./node_modules/@babel/runtime/helpers/defineProperty.js","webpack://alo.[name]/./lib/alo/observable/index.ts","webpack://alo.[name]/./node_modules/@babel/runtime/helpers/assertThisInitialized.js","webpack://alo.[name]/./node_modules/@babel/runtime/helpers/classCallCheck.js","webpack://alo.[name]/./node_modules/@babel/runtime/helpers/createClass.js","webpack://alo.[name]/./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","webpack://alo.[name]/./node_modules/@babel/runtime/helpers/getPrototypeOf.js","webpack://alo.[name]/./node_modules/@babel/runtime/helpers/inherits.js","webpack://alo.[name]/./lib/alo/util/dispatchBatch.ts","webpack://alo.[name]/./lib/alo/util/index.ts","webpack://alo.[name]/./lib/alo/event/index.ts","webpack://alo.[name]/./lib/alo/store/index.ts","webpack://alo.[name]/./lib/alo/actionNormalizer/index.ts","webpack://alo.[name]/./lib/alo/util/isPlainObject.ts","webpack://alo.[name]/./lib/alo/mutator/index.ts","webpack://alo.[name]/./lib/alo/actionResolver/index.ts","webpack://alo.[name]/./lib/alo/action/index.ts","webpack://alo.[name]/./node_modules/@babel/runtime/helpers/typeof.js","webpack://alo.[name]/./lib/alo/subscribable/index.ts","webpack://alo.[name]/./lib/alo/util/dispatchThunk.ts","webpack://alo.[name]/./lib/alo/actionNormalizer/batchActionNormalizerDecorator.ts","webpack://alo.[name]/./lib/alo/actionResolver/batchActionResolverDecorator.ts","webpack://alo.[name]/(webpack)/buildin/module.js","webpack://alo.[name]/./node_modules/fast-clone/index.js","webpack://alo.[name]/./lib/alo/main/observable.ts","webpack://alo.[name]/./node_modules/@babel/runtime/helpers/setPrototypeOf.js","webpack://alo.[name]/./lib/alo/main/core.ts","webpack://alo.[name]/./lib/alo/undoable/index.ts","webpack://alo.[name]/./lib/alo/actionNormalizer/dateActionNormalizerDecorator.ts","webpack://alo.[name]/./lib/alo/actionNormalizer/undoableActionNormalizerDecorator.ts","webpack://alo.[name]/./lib/alo/util/dispatchPromise.ts","webpack://alo.[name]/./lib/alo/util/dispatchActions.ts"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","obj","configurable","writable","nextId","generateUniqueId","observerInfoMap","observableInfoMap","isObservable","resultObj","pauseObserver","pause","currentObserver","id","callObserver","observerId","previousId","previousPause","observerInfo","running","console","error","fn","Error","setValue","storage","observerIdSet","notifyObservers","keys","observe","notifyInBatches","targetObserverIdSets","forEach","idSet","removeProp","__observableId","propObserverIdSetMap","setProp","deep","Array","isArray","itemKey","itemValue","isPlainObject","observable","undefined","log","push","set","observableId","plannedObserverCalls","nextPlanIdx","observerIds","planIdx","notify","batchInfo","count","batchId","indexOf","batch","batchStart","batchEnd","getOriginObject","result","computationBatchIdx","computation","propsObj","objKeys","subscriptions","unsubscribed","unsubscribeFn","subscription","init","prevBatchId","empty","extract","ReferenceError","instance","Constructor","TypeError","_defineProperties","target","props","length","descriptor","protoProps","staticProps","_typeof","assertThisInitialized","_getPrototypeOf","setPrototypeOf","getPrototypeOf","__proto__","subClass","superClass","constructor","resolveBatchAction","store","action","payload","dispatch","BATCH_ACTION_TYPE","batchIdx","dispatchBatch","thunk","batchAction","type","meta","pure","rootBatchId","newBatch","getState","parentBatchIds","batchItem","isPromiseLike","then","promise","once","done","findInArray","values","predicate","idx","cloneDeep","clone","parentByTag","entityContainerByTag","childrenByTag","registerEntityContainer","containerTag","tag","createTag","children","entityContainer","setTagChildren","child","getTagEntity","event","entityId","initialize","container","containers","setWildCard","subject","tagsSet","tags","entity","setTag","parentTag","parentWildCardIsSet","childTag","tagIsSet","checkWildCard","wildCardIsSet","createEvent","actionTypes","INIT","Store","mutator","state","actionNormalizer","ActionNormalizer","actionResolver","ActionResolver","subscribable","Subscribable","_cloneDeep","pureByDefault","_observable","isAction","tmp","_actionNormalizer","normalize","callBack","_afterDispatchNormalization","_subscribable","callSubscribers","_actionResolver","resolve","setAction","_setAction","_callSubscribers","applyMutator","_applyMutator","pureAction","_pureByDefault","originalPayload","_isMutating","_applyMutatorBatch","_action","_mutator","impure","listener","remember","subscribe","func","pauseObserverFn","isInitAction","err","undo","redo","AbstractActionNormalizerDecorator","options","toString","typeMutator","consumer","combineMutators","mutators","mutatorKeys","propName","callSubscribersLazy","AbstractActionResolverDecorator","cloneAction","iterator","_currentListeners","_nextListeners","slice","_separateNextListeners","isSubscribed","_subscribersCalled","_lastListenerOptions","index","splice","listenerOptions","typeThunk","dispatchThunk","dispatchedActions","dispatchedAction","BatchActionNormalizerDecorator","batchItems","map","reverse","storeProxy","childAction","ds","BatchActionResolverDecorator","_eventByBatchId","_observableBatchByBatchId","_childsByBatchId","parentId","webpackPolyfill","deprecate","paths","Function","Date","setTime","getTime","RegExp","newRegExp","fixTypes","JSON","parse","stringify","fixPropertyValue","original","copy","originalValue","newValue","isNaN","NaN","Infinity","getOwnPropertyNames","regexpText","String","slashIndex","lastIndexOf","_setPrototypeOf","setUndoData","undoData","getUndoData","setUndoableCache","undoableCache","createUndoThunk","createRedoThunk","createUndoableMutator","actionFilter","past","future","pastAction","pop","do","futureAction","DateActionNormalizerDecorator","date","UndoableActionNormalizerDecorator","dispatchPromise","dispatchActions","actions"],"mappings":"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","file":"core.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"core\"] = factory();\n\telse\n\t\troot[\"alo\"] = root[\"alo\"] || {}, root[\"alo\"][\"core\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 37);\n","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","// Originally created by dongwoo-kim (https://github.com/dongwoo-kim)\n// https://github.com/nhn/tui.grid/blob/55278fba5303fcef928715cbb003aeed0964dd29/src/helper/observable.ts\n\nimport { Dictionary } from \"../util/types\";\nimport {\n  ObserverInfo,\n  ObservableInfo,\n  Observable,\n  BooleanSet,\n  ObserveFn,\n  PauseObserverFn\n} from \"./types\";\nimport { isPlainObject } from \"../util/isPlainObject\";\n\nlet nextId = 0;\nconst generateUniqueId = function() {\n  return `${nextId++}`;\n};\n\n// store all observer info\nconst observerInfoMap: Dictionary<ObserverInfo> = {};\n\nconst observableInfoMap: Dictionary<ObservableInfo<any>> = {};\n\nfunction isObservable<T>(resultObj: T): resultObj is Observable<T> {\n  return (\n    resultObj !== null &&\n    typeof resultObj === \"object\" &&\n    resultObj[\"__observableId\"] != null\n  );\n}\n\nexport const pauseObserver: PauseObserverFn = function(pause = true) {\n  if (!currentObserver.id) return;\n\n  currentObserver.pause = pause;\n};\n\nconst currentObserver: { id: null | string; pause: boolean } = {\n  id: null,\n  pause: false\n};\nfunction callObserver(observerId: string) {\n  let previousId = currentObserver.id;\n  let previousPause = currentObserver.pause;\n\n  currentObserver.pause = false;\n  currentObserver.id = observerId;\n\n  const observerInfo = observerInfoMap[observerId];\n\n  if (observerInfo.running) {\n    console.error(\"Bad observer\", observerInfo.fn);\n    throw new Error(`Bad recursion detected in observer`);\n  }\n\n  observerInfo.running = true;\n  observerInfo.fn(pauseObserver);\n  observerInfo.running = false;\n\n  currentObserver.id = previousId;\n  currentObserver.pause = previousPause;\n}\n\nfunction setValue<T, K extends keyof T>(\n  storage: T,\n  observerIdSet: BooleanSet,\n  key: keyof T,\n  value: T[K]\n) {\n  if (storage[key] !== value) {\n    storage[key] = value;\n    notifyObservers(Object.keys(observerIdSet));\n  }\n}\n\nexport function observe(\n  fn: ObserveFn,\n  notifyInBatches: string | boolean = false\n) {\n  const observerId = generateUniqueId();\n  observerInfoMap[observerId] = {\n    running: false,\n    notifyInBatches,\n    fn,\n    targetObserverIdSets: []\n  };\n  callObserver(observerId);\n\n  // return unobserve function\n  return () => {\n    observerInfoMap[observerId].targetObserverIdSets.forEach(idSet => {\n      delete idSet[observerId];\n    });\n  };\n}\n\nexport const removeProp = function<\n  T extends Observable<any>,\n  K extends keyof T\n>(obj: T, key: K) {\n  const { storage, propObserverIdSetMap } = observableInfoMap[\n    obj.__observableId\n  ];\n  delete storage[key];\n  delete obj[key];\n  delete propObserverIdSetMap[key as any];\n};\n\nexport const setProp = function<T extends Observable<any>, K extends keyof T>(\n  obj: T,\n  key: K,\n  value: T[K],\n  deep = false\n) {\n  const { storage, propObserverIdSetMap } = observableInfoMap[\n    obj.__observableId\n  ];\n  const observerIdSet: BooleanSet = (propObserverIdSetMap[key as any] =\n    propObserverIdSetMap[key as any] || {});\n\n  if (deep) {\n    if (Array.isArray(value)) {\n      for (const itemKey of Object.keys(value)) {\n        var itemValue = value[itemKey];\n        if (!isPlainObject(itemValue)) {\n          continue;\n        }\n\n        value[itemKey] = observable(itemValue);\n      }\n    } else if (isPlainObject(value)) {\n      value = observable(value);\n    }\n  }\n\n  if (storage[key] !== undefined && obj[key] !== undefined) {\n    // TODO: Remove this console.log?\n    console.log(\"already existing\");\n    setValue(storage, observerIdSet, key, value);\n    return;\n  }\n\n  Object.defineProperty(obj, key, {\n    configurable: true,\n    enumerable: true,\n    get() {\n      // The current observer is paused for registering get calls (triggered by pauseObserver)\n      if (currentObserver.pause) {\n        return storage[key];\n      }\n\n      const observerId = currentObserver.id;\n      // There is no active observer, or the current observer is already tracked\n      if (!observerId || observerIdSet[observerId]) {\n        return storage[key];\n      }\n\n      // An observer asked for a property on the observable, we have to track this\n      observerIdSet[observerId] = true;\n      observerInfoMap[observerId].targetObserverIdSets.push(observerIdSet);\n\n      return storage[key];\n    }\n  });\n\n  (storage as any)[key] = value;\n  Object.defineProperty(obj, key, {\n    set(value) {\n      setValue(storage, observerIdSet, key, value);\n    }\n  });\n};\n\nexport function observable<T extends Dictionary<any>>(\n  obj: T,\n  deep: boolean = true\n): Observable<T> {\n  if (isObservable(obj)) {\n    return obj;\n  }\n\n  if (Array.isArray(obj)) {\n    throw new Error(\"Array object cannot be Reactive\");\n  }\n\n  const observableId = generateUniqueId();\n  const resultObj = {} as T;\n\n  observableInfoMap[observableId] = {\n    storage: {},\n    propObserverIdSetMap: {}\n  };\n\n  Object.defineProperty(resultObj, \"__observableId\", {\n    value: observableId\n  });\n\n  for (const key of Object.keys(obj)) {\n    setProp(resultObj, key, obj[key], deep);\n  }\n\n  return resultObj as Observable<T>;\n}\n\n// Used to optimize observer-to-observer calls:\n// For nested notifyObservers calls, the observers will be called only once in the most outward notifyObservers call\nconst plannedObserverCalls = {};\nlet nextPlanIdx = 0;\nconst notifyObservers = function(observerIds: string[]) {\n  let planIdx = nextPlanIdx++;\n\n  let notify = true;\n  if (batchInfo.count > 0) {\n    notify = false;\n  }\n\n  for (const observerId of observerIds) {\n    if (plannedObserverCalls[observerId] != null) {\n      continue;\n    }\n\n    plannedObserverCalls[observerId] = planIdx;\n  }\n  for (const observerId of observerIds) {\n    const notifyInBatches = observerInfoMap[observerId].notifyInBatches;\n    if (\n      notify ||\n      notifyInBatches === true ||\n      notifyInBatches === batchInfo.batchId\n    ) {\n      if (plannedObserverCalls[observerId] !== planIdx) {\n        continue;\n      }\n      callObserver(observerId);\n    } else {\n      if (batchInfo.observerIds.indexOf(observerId) === -1) {\n        batchInfo.observerIds.push(observerId);\n      }\n    }\n\n    delete plannedObserverCalls[observerId];\n  }\n};\n\nexport function notify<T extends Observable<any>, K extends keyof T>(\n  obj: T,\n  key: K\n) {\n  if (isObservable(obj)) {\n    const propObserverIdSetMap =\n      observableInfoMap[obj.__observableId].propObserverIdSetMap[key as string];\n    notifyObservers(Object.keys(propObserverIdSetMap));\n  }\n}\n\nconst batchInfo: { count: number; observerIds: string[]; batchId: any } = {\n  count: 0,\n  observerIds: [],\n  batchId: null\n};\nexport const batch = function(fn: () => void) {\n  batchStart();\n  fn();\n  batchEnd();\n};\n\nexport const batchStart = function() {\n  batchInfo.count++;\n};\n\nexport const batchEnd = function() {\n  if (batchInfo.count === 0) return;\n\n  batchInfo.count--;\n  if (batchInfo.count === 0) {\n    let observerIds = batchInfo.observerIds;\n    batchInfo.observerIds = [];\n    notifyObservers(observerIds);\n  }\n};\n\nexport function getOriginObject<T>(obj: Observable<T>) {\n  const result = {} as T;\n  const storage = observableInfoMap[obj.__observableId].storage;\n  for (const key of Object.keys(storage)) {\n    const value = storage[key];\n    result[key] = isObservable(value) ? getOriginObject(value) : value;\n  }\n\n  return result;\n}\n\nlet computationBatchIdx = 0;\nexport const computation = function<\n  P extends {\n    [key: string]: (\n      obj: any,\n      value: any,\n      key: any,\n      pauseObserver: PauseObserverFn,\n      init: boolean\n    ) => any;\n  }\n>(\n  propsObj: P,\n  batch: boolean = true\n): [{ [K in keyof P]: ReturnType<P[K]> }, () => void] {\n  const batchId = \"computation-\" + computationBatchIdx++;\n\n  let obj = {};\n  const objKeys = Object.keys(propsObj);\n  for (const key of objKeys) {\n    obj[key] = null;\n  }\n\n  obj = observable(obj, false);\n\n  let subscriptions = [] as Function[];\n  let unsubscribed = false;\n  const unsubscribeFn = function() {\n    if (unsubscribed) return;\n    for (const subscription of subscriptions) {\n      subscription();\n    }\n    unsubscribed = true;\n  };\n\n  for (const key of objKeys) {\n    let init = true;\n    subscriptions.push(\n      observe(function(pauseObserver) {\n        let prevBatchId = batchInfo.batchId;\n        if (batch) {\n          batchStart();\n          batchInfo.batchId = batchId;\n        }\n\n        obj[key] = propsObj[key](\n          obj,\n          observableInfoMap[obj[\"__observableId\"]].storage[key],\n          key,\n          pauseObserver,\n          init\n        );\n\n        if (batch) {\n          batchEnd();\n          batchInfo.batchId = prevBatchId;\n        }\n      }, batchId)\n    );\n    init = false;\n  }\n\n  return [obj as any, unsubscribeFn];\n};\n\ncomputation.empty = function(): any {};\n\nexport const extract = function(observable, deep = true) {\n  let result = observable;\n\n  if (Array.isArray(observable)) {\n    result = [];\n    for (let value of observable) {\n      if (deep) {\n        value = extract(value, deep);\n      }\n      result.push(value);\n    }\n  } else if (isObservable(observable)) {\n    result = {};\n    for (const key of Object.keys(observable)) {\n      let value = observable[key];\n      if (deep) {\n        value = extract(value, deep);\n      }\n      result[key] = value;\n    }\n  }\n\n  return result;\n};\n","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","var _typeof = require(\"../helpers/typeof\");\n\nvar assertThisInitialized = require(\"./assertThisInitialized\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits;","import { StoreDispatchApi, Action, NormalizedAction } from \"../main/core\";\nimport { isPromiseLike } from \".\";\nimport { BatchAction, Thunk } from \"./types\";\n\nconst resolveBatchAction = function(\n  store: StoreDispatchApi,\n  action: BatchAction\n): Action | undefined {\n  if (!action.payload) {\n    // No child actions were dispatched\n    return;\n  }\n\n  return store.dispatch(action);\n};\n\nexport const BATCH_ACTION_TYPE = \"@@batch\";\nlet batchIdx = 0;\nexport const dispatchBatch = function<\n  S extends StoreDispatchApi,\n  T extends Thunk<StoreDispatchApi<ReturnType<S[\"getState\"]>>>\n>(\n  store: S,\n  thunk: T\n): ReturnType<T> extends Promise<any>\n  ? Promise<Action | undefined>\n  : Action | undefined {\n  const batchId = batchIdx++;\n  const batchAction: BatchAction = {\n    type: BATCH_ACTION_TYPE,\n    payload: [],\n    meta: {\n      pure: true,\n      batchId,\n      rootBatchId: batchId,\n      batch: true,\n      newBatch: true\n    }\n  };\n\n  const result = thunk({\n    getState: store.getState,\n    dispatch: function(action) {\n      action.meta = action.meta || {};\n\n      if (action.meta.batchId == null) {\n        action.meta.batchId = batchAction.meta.batchId;\n      }\n\n      action.meta.rootBatchId = batchAction.meta.batchId;\n\n      action.meta.parentBatchIds = action.meta.parentBatchIds || [];\n      action.meta.parentBatchIds.push(batchAction.meta.batchId);\n\n      action.meta.batchItem = true;\n\n      return store.dispatch(action);\n    }\n  } as S);\n\n  if (isPromiseLike(result)) {\n    return result.then(function() {\n      return resolveBatchAction(store, batchAction);\n    }) as any;\n  }\n\n  return resolveBatchAction(store, batchAction) as any;\n};\n","import clone from \"fast-clone\";\n\nexport const isPromiseLike = function(promise): promise is Promise<any> {\n  return promise && (<Promise<any>>promise).then !== undefined;\n};\n\nexport var once = function(fn) {\n  var done = false;\n  var result;\n\n  return function() {\n    if (!done) {\n      result = fn();\n      done = true;\n    }\n\n    return result;\n  };\n};\n\nexport const findInArray = function(\n  values: any[],\n  predicate: (value, key, values) => any\n) {\n  let idx = 0;\n  for (const value of values) {\n    const result = predicate(value, idx, values);\n    if (result) {\n      return result;\n    }\n\n    idx++;\n  }\n};\n\nexport { isPlainObject } from \"./isPlainObject\";\n\nexport const cloneDeep = function(value) {\n  return clone(value);\n};\n","import { Event, Tag, EntityId, Entity } from \"./types\";\nimport { Action } from \"../action/types\";\n\nlet idx = 0;\nlet parentByTag = {};\nlet entityContainerByTag = {};\nlet childrenByTag = {};\n\nconst registerEntityContainer = function(containerTag: Tag, tag: Tag) {\n  entityContainerByTag[tag] = containerTag;\n  if (childrenByTag[tag]) {\n    for (const child of childrenByTag[tag]) {\n      registerEntityContainer(containerTag, child);\n    }\n  }\n};\n\nexport const createTag = function({\n  name = \"\",\n  children,\n  entityContainer = false\n}: {\n  name?: string;\n  children?: Tag[];\n  entityContainer?: boolean;\n} = {}): Tag {\n  const tag = `${idx++}-${name}`;\n\n  if (children) {\n    setTagChildren(tag, children, entityContainer);\n  }\n\n  return tag;\n};\n\nexport const setTagChildren = function(\n  tag: Tag,\n  children: Tag[],\n  entityContainer = false\n) {\n  childrenByTag[tag] = children;\n\n  for (const child of children) {\n    parentByTag[child] = tag;\n    if (entityContainer) {\n      registerEntityContainer(tag, child);\n    }\n  }\n};\n\nconst getTagEntity = function(\n  event: Event,\n  tag: Tag,\n  entityId: EntityId,\n  initialize = false\n): Entity | undefined {\n  const containerTag = entityContainerByTag[tag];\n  if (!containerTag) return;\n\n  if (initialize) {\n    const container = (event.containers[containerTag] =\n      event.containers[containerTag] || {});\n    return (container[entityId] = container[entityId] || {});\n  } else {\n    const container = event.containers[containerTag];\n    if (!container) return;\n    return container[entityId];\n  }\n};\n\nexport const setWildCard = function(\n  subject: Event | Action,\n  tag: Tag = \"\",\n  entityId?: EntityId\n) {\n  const event: Event =\n    (subject as Action).type !== undefined\n      ? (subject as Action).event\n      : (subject as Event);\n\n  event.tagsSet = true;\n\n  event.tags[tag + \"*\"] = true;\n\n  if (entityId != null) {\n    const entity = getTagEntity(event, tag, entityId, true);\n    if (entity) {\n      entity[tag + \"*\"] = true;\n    }\n  }\n};\n\nexport const setTag = function(\n  subject: Event | Action,\n  tag: Tag,\n  entityId?: EntityId,\n  entity?: Entity\n) {\n  const event: Event =\n    (subject as Action).type !== undefined\n      ? (subject as Action).event\n      : (subject as Event);\n\n  event.tagsSet = true;\n\n  event.tags[tag] = event.tags[tag] || true;\n\n  if (entityId != null) {\n    entity = entity || getTagEntity(event, tag, entityId, true);\n    if (entity) {\n      entity[tag] = true;\n    }\n  }\n\n  const parentTag = parentByTag[tag];\n  if (parentTag && !event.tags[parentTag]) {\n    setTag(event, parentTag, entityId);\n  }\n};\n\nconst parentWildCardIsSet = function(\n  event: Event,\n  childTag: Tag,\n  entity?: Entity\n) {\n  while (true) {\n    childTag = parentByTag[childTag];\n    if (!childTag) {\n      return false;\n    }\n\n    if (entity && entity[childTag + \"*\"]) {\n      return true;\n    }\n\n    if (event.tags[childTag + \"*\"]) {\n      return true;\n    }\n  }\n};\n\nexport const tagIsSet = function(\n  subject: Event | Action,\n  tag: Tag,\n  entityId?: EntityId,\n  checkWildCard = true\n) {\n  const event: Event =\n    (subject as Action).type !== undefined\n      ? (subject as Action).event\n      : (subject as Event);\n\n  if (checkWildCard && event.tags[\"*\"]) {\n    return true;\n  }\n\n  let tagIsSet = event.tags[tag];\n  let entity;\n\n  if (entityId != null) {\n    entity = getTagEntity(event, tag, entityId);\n    if (entity) {\n      tagIsSet = entity[tag];\n    } else {\n      tagIsSet = false;\n    }\n  }\n\n  const wildCardIsSet =\n    !tagIsSet && checkWildCard && parentWildCardIsSet(event, tag, entity);\n\n  return !!(tagIsSet || wildCardIsSet);\n};\n\nexport const createEvent = function(): Event {\n  return {\n    tagsSet: false,\n    tags: {},\n    containers: {}\n  };\n};\n","import { Action, NewAction, NormalizedAction } from \"../action/types\";\nimport { ActionNormalizer } from \"../actionNormalizer\";\nimport {\n  ActionNormalizerInterface,\n  NormalizeOptions\n} from \"../actionNormalizer/types\";\nimport { ActionResolver } from \"../actionResolver\";\nimport { ActionResolverInterface } from \"../actionResolver/types\";\nimport { DeepPartial } from \"../util/types\";\nimport { isAction } from \"../action\";\nimport { Listener, SubscribableInterface } from \"../subscribable/types\";\nimport { Mutator } from \"../mutator/types\";\nimport { setWildCard } from \"../event\";\nimport { StoreInterface } from \"./types\";\nimport { Subscribable } from \"../subscribable\";\nimport { cloneDeep as _cloneDeep, isPlainObject } from \"../util\";\nimport { observe, observable, batch } from \"../observable\";\nimport { PauseObserverFn } from \"../observable/types\";\n\nexport var actionTypes = {\n  INIT: \"@@init\"\n};\n\nexport class Store<T extends Mutator = Mutator> implements StoreInterface {\n  _isMutating: boolean;\n  _observable: {\n    state: any;\n  } = observable({\n    state: null\n  });\n  _action: Action;\n  _mutator: Mutator;\n  _actionNormalizer: ActionNormalizerInterface;\n  _actionResolver: ActionResolverInterface;\n  _subscribable: SubscribableInterface<Store<T>>;\n  _cloneDeep: typeof _cloneDeep;\n  _pureByDefault: boolean;\n\n  constructor({\n    mutator,\n    state,\n    actionNormalizer = new ActionNormalizer(),\n    actionResolver = new ActionResolver(),\n    subscribable = new Subscribable(),\n    cloneDeep = _cloneDeep,\n    pureByDefault = false\n  }: {\n    mutator: T;\n    state?: DeepPartial<ReturnType<ReturnType<T>>>;\n    actionNormalizer?: ActionNormalizerInterface;\n    actionResolver?: ActionResolverInterface;\n    subscribable?: SubscribableInterface<Store<T>>;\n    cloneDeep?: typeof _cloneDeep;\n    pureByDefault?: boolean;\n  }) {\n    this._actionResolver = actionResolver;\n    this._actionNormalizer = actionNormalizer;\n    this._subscribable = subscribable;\n    this._cloneDeep = cloneDeep;\n    this._pureByDefault = pureByDefault;\n\n    this._isMutating = false;\n    this._mutator = mutator;\n\n    // Initial set action\n    this.dispatch({\n      type: actionTypes.INIT,\n      meta: {\n        impure: true\n      },\n      payload: state\n    });\n  }\n\n  /**\n   * Returns the current state\n   */\n  getState = (): ReturnType<T> => {\n    return this._observable.state;\n  };\n\n  /**\n   * Get the last dispatched action\n   */\n  getAction(): Action {\n    return this._action;\n  }\n\n  subscribe(listener: Listener<this>, remember = false) {\n    return this._subscribable.subscribe(listener, remember);\n  }\n\n  getActionNormalizer() {\n    return this._actionNormalizer;\n  }\n\n  setActionNormalizer(actionNormalizer: ActionNormalizerInterface) {\n    this._actionNormalizer = actionNormalizer;\n  }\n\n  getActionResolver() {\n    return this._actionResolver;\n  }\n\n  setActionResolver(actionResolver: ActionResolverInterface) {\n    this._actionResolver = actionResolver;\n  }\n\n  getSubscribable() {\n    return this._subscribable;\n  }\n\n  setSubscribable(subscribable: SubscribableInterface<Store<T>>) {\n    this._subscribable = subscribable;\n  }\n\n  /**\n   * Send a message which will trigger an action\n   */\n  dispatch = (action: NewAction): Action | undefined => {\n    if (!isAction(action)) {\n      if (action) {\n        console.error(\"Invalid action dispatched\", action);\n      }\n\n      return;\n    }\n\n    if (!action.meta) action.meta = {};\n    if (!action.meta.tmp) action.meta.tmp = {};\n\n    return this._actionNormalizer.normalize({\n      action: action as NormalizedAction,\n      callBack: this._afterDispatchNormalization,\n      store: this\n    });\n  };\n\n  observe(func: (store: this, pauseObserverFn: PauseObserverFn) => any) {\n    return observe(pauseObserverFn => {\n      func(this, pauseObserverFn);\n    });\n  }\n\n  _callSubscribers = () => {\n    this._subscribable.callSubscribers(this);\n  };\n\n  _afterDispatchNormalization: NormalizeOptions[\"callBack\"] = action => {\n    return this._actionResolver.resolve({\n      action: action,\n      store: this,\n      setAction: this._setAction,\n      callSubscribers: this._callSubscribers,\n      applyMutator: this._applyMutator\n    });\n  };\n\n  _applyMutatorBatch(action: Action) {\n    const isInitAction = action.type === actionTypes.INIT;\n\n    if (isInitAction) {\n      this._observable.state = isPlainObject(action.payload)\n        ? observable(action.payload)\n        : action.payload;\n      setWildCard(action.event);\n    }\n\n    try {\n      let result = this._mutator(\n        this._observable.state,\n        action,\n        \"state\",\n        this._observable\n      );\n      // TODO: Maybe this should only happen if the user wants to use observables? Option-worthy?\n      if (isInitAction && isPlainObject(result)) {\n        result = observable(result);\n      }\n      this._observable.state = result;\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  _applyMutator = (action: Action) => {\n    let pureAction =\n      action.meta.pure != null ? action.meta.pure : this._pureByDefault;\n    let originalPayload = action.payload;\n    if (action.payload != null && !pureAction) {\n      action.payload = this._cloneDeep(originalPayload);\n    }\n\n    if (this._isMutating) {\n      throw new Error(\"Mutations already in progress\");\n    }\n\n    this._isMutating = true;\n\n    batch(() => {\n      this._applyMutatorBatch(action);\n    });\n\n    this._isMutating = false;\n\n    action.payload = originalPayload;\n  };\n\n  /**\n   * Override the last dispatched action\n   *\n   * @param action New action\n   */\n  _setAction = (action: Action) => {\n    this._action = action;\n  };\n}\n","import { ActionNormalizerInterface, NormalizeOptions } from \"./types\";\n\nexport class ActionNormalizer implements ActionNormalizerInterface {\n  normalize({ action, callBack }: NormalizeOptions) {\n    if (!action.meta.undo && !action.meta.redo) action.meta.do = true;\n\n    return callBack(action);\n  }\n}\n\nexport abstract class AbstractActionNormalizerDecorator\n  implements ActionNormalizerInterface {\n  _actionNormalizer: ActionNormalizerInterface;\n\n  constructor({\n    actionNormalizer\n  }: {\n    actionNormalizer: ActionNormalizerInterface;\n  }) {\n    this._actionNormalizer = actionNormalizer;\n  }\n\n  normalize(options: NormalizeOptions) {\n    return this._actionNormalizer.normalize(options);\n  }\n}\n","const toString = {}.toString;\n\nexport const isPlainObject = function(obj) {\n  return !!(obj && toString.call(obj) === \"[object Object]\");\n};\n","import { Action } from \"../action/types\";\nimport { Mutator, MutatorsObj, MutatorsReturnObject } from \"./types\";\n\nexport const typeMutator = function<T extends Mutator<R>, R = any>(\n  consumer: T\n) {\n  return consumer;\n};\n\nexport const combineMutators = function<\n  TMutatorsObj extends MutatorsObj = MutatorsObj\n>(mutators: TMutatorsObj) {\n  const mutatorKeys = Object.keys(mutators);\n  const mutator = typeMutator(function(\n    state: Partial<MutatorsReturnObject<TMutatorsObj>> = {},\n    action: Action\n  ): MutatorsReturnObject<TMutatorsObj> {\n    for (const propName of mutatorKeys) {\n      (state as any)[propName] = mutators[propName](\n        state[propName],\n        action,\n        propName,\n        state\n      );\n    }\n\n    return state as any;\n  });\n\n  return mutator;\n};\n","import { Action } from \"../action/types\";\nimport { createEvent } from \"../event\";\nimport { ActionResolverInterface, ResolveOptions } from \"./types\";\n\nexport class ActionResolver implements ActionResolverInterface {\n  callSubscribersLazy: boolean;\n\n  constructor({\n    callSubscribersLazy = false\n  }: { callSubscribersLazy?: boolean } = {}) {\n    this.callSubscribersLazy = callSubscribersLazy;\n  }\n\n  resolve({\n    action,\n    callSubscribers,\n    applyMutator,\n    setAction\n  }: ResolveOptions): Action | undefined {\n    action.event = createEvent();\n\n    applyMutator(action as Action);\n\n    setAction(action as Action);\n    if (!this.callSubscribersLazy || action.event.tagsSet) {\n      callSubscribers();\n    }\n\n    return action as Action;\n  }\n}\n\nexport abstract class AbstractActionResolverDecorator\n  implements ActionResolverInterface {\n  _actionResolver: ActionResolverInterface;\n\n  constructor({ actionResolver }: { actionResolver: ActionResolverInterface }) {\n    this._actionResolver = actionResolver;\n  }\n\n  resolve(options: ResolveOptions) {\n    return this._actionResolver.resolve(options);\n  }\n}\n","import { NewAction, Action, NormalizedAction } from \"./types\";\n\nexport const isAction = function(action): action is NewAction {\n  return action && (<NewAction>action).type !== undefined;\n};\n\nexport const cloneAction = function(\n  action: NormalizedAction | Action\n): NormalizedAction {\n  return {\n    ...action,\n    event: undefined,\n    meta: {\n      ...action.meta,\n      tmp: {}\n    }\n  };\n};\n","function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","import { SubscribableInterface, Listener } from \"./types\";\n\n/**\n * Implements a very basic and general subscribable:\n * a list of listeners which will be called in specific moments - moments defined by the child class\n * New listeners will not be directly called, when they are subscribed while a broadcast is happening\n */\nexport class Subscribable<T = any> implements SubscribableInterface<T> {\n  _currentListeners: Function[];\n  _nextListeners: Function[];\n  _lastListenerOptions?: T;\n  _subscribersCalled = false;\n\n  constructor() {\n    this._currentListeners = [];\n    // Will be copied shallowly from currentListeners by _separateNextListeners\n    this._nextListeners = this._currentListeners;\n  }\n\n  /**\n   * Creates a copy of currentListeners for the futureListeners (Look at subscribe for more information)\n   */\n  _separateNextListeners() {\n    if (this._currentListeners === this._nextListeners) {\n      this._nextListeners = this._currentListeners.slice();\n    }\n  }\n\n  /**\n   * Adds a function to the subscribers list.\n   *\n   * The function gets called with the store as a parameter\n   *\n   * If subscribe is called in an other listener and is therefore in a _callSubscribers call,\n   * the new listener will only be called in future _callSubscribers calls!\n   *\n   * @param {function} listener\n   */\n  subscribe(listener: Listener<T>, remember = false) {\n    this._separateNextListeners();\n    var isSubscribed = true;\n    this._nextListeners.push(listener);\n\n    if (remember && this._subscribersCalled) {\n      listener(this._lastListenerOptions as T);\n    }\n\n    return function() {\n      if (isSubscribed) {\n        isSubscribed = false;\n        this._separateNextListeners();\n        var index = this._nextListeners.indexOf(listener);\n        this._nextListeners.splice(index, 1);\n      }\n    };\n  }\n\n  /**\n   * Should be called by the child class, when a broadcast to the subscribers should occur\n   * This also sets the listeners registered in nextListeners as currentListeners\n   */\n  callSubscribers(listenerOptions: T) {\n    this._subscribersCalled = true;\n    this._lastListenerOptions = listenerOptions;\n    this._currentListeners = this._nextListeners;\n    for (var listener of this._currentListeners) {\n      listener(listenerOptions);\n    }\n  }\n}\n\n/**\n * Callback used by _callSubscribers\n * @callback listenerCallback\n * @param {Store} store\n *\n * TODO: This notation currently doesnt work with vscode https://github.com/Microsoft/TypeScript/issues/7515\n */\n","import { isPromiseLike } from \".\";\nimport { StoreDispatchApi, Action } from \"../main/core\";\nimport { Thunk } from \"./types\";\n\nexport const typeThunk = <T extends Thunk>(thunk: T) => thunk;\n\nexport const dispatchThunk = function<\n  S extends StoreDispatchApi,\n  T extends Thunk<StoreDispatchApi<ReturnType<S[\"getState\"]>>>\n>(\n  store: S,\n  thunk: T\n): ReturnType<T> extends Promise<any> ? Promise<Action[]> : Action[] {\n  const dispatchedActions: Action[] = [];\n\n  const result = thunk({\n    getState: store.getState,\n    dispatch: function(action) {\n      const dispatchedAction = store.dispatch(action);\n      if (dispatchedAction) {\n        dispatchedActions.push(dispatchedAction);\n      }\n\n      return dispatchedAction;\n    }\n  });\n  if (isPromiseLike(result)) {\n    return result.then(function() {\n      return dispatchedActions;\n    }) as any;\n  }\n\n  return dispatchedActions as any;\n};\n","import { AbstractActionNormalizerDecorator } from \".\";\nimport { Action } from \"../action/types\";\nimport { NormalizeOptions } from \"./types\";\nimport { isAction, cloneAction } from \"../action\";\nimport { dispatchBatch, BATCH_ACTION_TYPE } from \"../util/dispatchBatch\";\nimport { StoreDispatchApi } from \"../store/types\";\n\n/**\n * Handles batch actions which are dispatched for a second time\n */\nexport class BatchActionNormalizerDecorator extends AbstractActionNormalizerDecorator {\n  normalize(options: NormalizeOptions) {\n    const { action, store } = options;\n\n    if (\n      !isAction(action) ||\n      action.type !== BATCH_ACTION_TYPE ||\n      action.meta.newBatch\n    ) {\n      return this._actionNormalizer.normalize(options);\n    }\n\n    let batchItems: Action[] = action.payload.map(action =>\n      cloneAction(action)\n    );\n    if (action.meta.undo) {\n      batchItems.reverse();\n    }\n\n    let storeProxy: StoreDispatchApi = {\n      getState: store.getState,\n      dispatch: function(childAction) {\n        childAction.meta = childAction.meta || {};\n\n        // Handle recursive batches\n        if (action.meta.batchId != null) {\n          childAction.meta.rootBatchId = action.meta.rootBatchId;\n          childAction.meta.parentBatchIds = action.meta.parentBatchIds;\n        }\n\n        if (\n          childAction.type === BATCH_ACTION_TYPE &&\n          !childAction.meta.batchItem\n        ) {\n          // This is the final new batch action created by \"dispatchBatch\"\n          // We now apply metas from our original batch options.action at the top\n          childAction.meta = { ...action.meta, ...childAction.meta };\n        }\n\n        return store.dispatch(childAction);\n      }\n    };\n\n    // For now we just use the dispatchBatch function to rehandle the old batch action\n    const newBatchAction = dispatchBatch(storeProxy, function(ds) {\n      for (const batchItem of batchItems) {\n        // Apply do/undo/redo signals from the batch action to its item\n        if (action.meta.undo) {\n          batchItem.meta.do = !batchItem.meta.do;\n          batchItem.meta.undo = !batchItem.meta.undo;\n        }\n        if (action.meta.redo && batchItem.meta.do) {\n          batchItem.meta.redo = true;\n        }\n\n        ds.dispatch(batchItem);\n      }\n    });\n\n    return newBatchAction;\n  }\n}\n","import { AbstractActionResolverDecorator } from \".\";\nimport { batchStart, batchEnd } from \"../observable\";\nimport { createEvent } from \"../event\";\nimport { BATCH_ACTION_TYPE } from \"../util/dispatchBatch\";\nimport { Action } from \"../action/types\";\nimport { ResolveOptions } from \"./types\";\n\nexport class BatchActionResolverDecorator extends AbstractActionResolverDecorator {\n  _eventByBatchId = {};\n  _childsByBatchId = {};\n  _observableBatchByBatchId = {};\n\n  resolve(options: ResolveOptions) {\n    const { store, setAction, applyMutator } = options;\n\n    if (\n      !options.action.meta.batchItem &&\n      options.action.type !== BATCH_ACTION_TYPE\n    ) {\n      return this._actionResolver.resolve(options);\n    }\n\n    const batchId = options.action.meta.batchId;\n    const rootBatchId = options.action.meta.rootBatchId;\n\n    options.action.event = this._eventByBatchId[rootBatchId] =\n      this._eventByBatchId[rootBatchId] || createEvent();\n    const action: Action = options.action as Action;\n    delete action.meta.batchId;\n    delete action.meta.rootBatchId;\n    delete action.meta.newBatch;\n    const parentBatchIds = options.action.meta.parentBatchIds;\n    delete action.meta.parentBatchIds;\n\n    if (action.meta.batchItem && action.type !== BATCH_ACTION_TYPE) {\n      if (this._observableBatchByBatchId[rootBatchId] == null) {\n        batchStart();\n        this._observableBatchByBatchId[rootBatchId] = true;\n      }\n      applyMutator(action);\n    }\n\n    if (action.type === BATCH_ACTION_TYPE) {\n      action.payload = this._childsByBatchId[batchId];\n      delete this._childsByBatchId[batchId];\n    }\n\n    if (action.meta.batchItem) {\n      if (action.type !== BATCH_ACTION_TYPE && parentBatchIds) {\n        for (const parentId of parentBatchIds) {\n          this._childsByBatchId[parentId] =\n            this._childsByBatchId[parentId] || [];\n          this._childsByBatchId[parentId].push(action);\n        }\n      }\n\n      delete action.meta.batchItem;\n\n      return action;\n    }\n\n    delete this._eventByBatchId[batchId];\n\n    if (this._observableBatchByBatchId[rootBatchId]) {\n      delete this._observableBatchByBatchId[rootBatchId];\n      batchEnd();\n    }\n\n    return this._actionResolver.resolve(options);\n  }\n}\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","\"use strict\";\nvar windowOrGlobal = Function('return this')();\n(function (root) {\n    /* istanbul ignore next */\n    if (typeof exports !== 'undefined') {\n        /* istanbul ignore next */\n        if (typeof module !== 'undefined' && module && module.exports) {\n            exports = module.exports = clone;\n        }\n        exports.clone = clone;\n    }\n    else {\n        /* istanbul ignore next */\n        root.clone = clone;\n    }\n    function clone(value) {\n        var type = typeof value;\n        switch (type) {\n            case 'object':\n                // null and undefined\n                if (value == null) {\n                    return value;\n                }\n                var result = void 0;\n                if (value instanceof Date) {\n                    result = new Date();\n                    result.setTime(value.getTime());\n                    return result;\n                }\n                else if (value instanceof RegExp) {\n                    result = newRegExp(value);\n                    return result;\n                }\n                result = JSON.parse(JSON.stringify(value));\n                fixTypes(value, result);\n                return result;\n            default:\n                return value;\n        }\n    }\n    function fixPropertyValue(original, copy, key) {\n        var originalValue = original[key];\n        var originalType = typeof originalValue;\n        switch (originalType) {\n            case 'object':\n                if (originalValue instanceof Date) {\n                    var newValue = new Date();\n                    newValue.setTime(originalValue.getTime());\n                    copy[key] = newValue;\n                }\n                else if (originalValue instanceof RegExp) {\n                    copy[key] = newRegExp(originalValue);\n                }\n                else if (originalValue == null) {\n                    copy[key] = originalValue;\n                }\n                else {\n                    fixTypes(originalValue, copy[key]);\n                }\n                break;\n            case 'number':\n                if (isNaN(originalValue)) {\n                    copy[key] = NaN;\n                }\n                else if (originalValue == Infinity) {\n                    copy[key] = Infinity;\n                }\n                break;\n            default:\n                break;\n        }\n    }\n    function fixTypes(original, copy) {\n        if (original instanceof Array) {\n            for (var index = 0; index < original.length; index++) {\n                fixPropertyValue(original, copy, index);\n            }\n        }\n        else {\n            var keys = Object.getOwnPropertyNames(original);\n            keys.forEach(function (key) {\n                fixPropertyValue(original, copy, key);\n            });\n        }\n    }\n    function newRegExp(value) {\n        var regexpText = String(value);\n        var slashIndex = regexpText.lastIndexOf('/');\n        return new RegExp(regexpText.slice(1, slashIndex), regexpText.slice(slashIndex + 1));\n    }\n})(windowOrGlobal);\n","export * from \"../observable\";\nexport * from \"../observable/types\";\n","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","export * from \"../store\";\nexport * from \"../store/types\";\n\nexport * from \"../action\";\nexport * from \"../action/types\";\n\nexport * from \"../event\";\nexport * from \"../event/types\";\n\nexport * from \"../mutator\";\nexport * from \"../mutator/types\";\n\nexport * from \"../undoable\";\nexport * from \"../undoable/types\";\n\nexport * from \"../subscribable\";\nexport * from \"../subscribable/types\";\n\nexport * from \"./observable\";\n\nexport * from \"../actionNormalizer\";\nexport * from \"../actionNormalizer/types\";\nexport * from \"../actionNormalizer/batchActionNormalizerDecorator\";\nexport * from \"../actionNormalizer/dateActionNormalizerDecorator\";\nexport * from \"../actionNormalizer/undoableActionNormalizerDecorator\";\n\nexport * from \"../actionResolver\";\nexport * from \"../actionResolver/types\";\nexport * from \"../actionResolver/batchActionResolverDecorator\";\n\nexport * from \"../util/dispatchBatch\";\nexport * from \"../util/dispatchThunk\";\nexport * from \"../util/dispatchPromise\";\nexport * from \"../util/dispatchActions\";\nexport * from \"../util/types\";\nexport { once, findInArray } from \"../util\";\n","import { actionTypes } from \"../store\";\nimport { NewAction } from \"../action/types\";\nimport { typeMutator } from \"../mutator\";\nimport { typeThunk } from \"../util/dispatchThunk\";\nimport {\n  UndoableAction,\n  UndoRedoAction,\n  ActionFilter,\n  UndoableMutatorState\n} from \"./types\";\nimport { observable, notify } from \"../observable\";\n\nexport const setUndoData = function(\n  action: UndoableAction,\n  key: string | number,\n  value?: any\n) {\n  const undoData = (action.meta.undoData = action.meta.undoData || {});\n  if (action.meta.do) undoData[key] = value;\n\n  return undoData[key];\n};\n\nexport const getUndoData = function(\n  action: UndoableAction,\n  key: string | number\n) {\n  const undoData = (action.meta.undoData = action.meta.undoData || {});\n\n  return undoData[key];\n};\n\nconst setUndoableCache = function(action: UndoRedoAction, value: NewAction) {\n  action.meta = action.meta || {};\n  action.meta.undoableCache = value;\n};\n\nconst undoActionTypePrefix = \"@@undo_\";\nconst redoActionTypePrefix = \"@@redo_\";\n\nexport const createUndoThunk = function(id) {\n  return typeThunk(store => {\n    const action = store.dispatch({\n      type: undoActionTypePrefix + id\n    });\n    if (action && action.meta && action.meta.undoableCache) {\n      store.dispatch({\n        type: action.meta.undoableCache.type,\n        payload: action.meta.undoableCache.payload,\n        meta: action.meta.undoableCache.meta\n      });\n      delete action.meta.undoableCache;\n    }\n  });\n};\n\nexport const createRedoThunk = function(id) {\n  return typeThunk(store => {\n    const action = store.dispatch({\n      type: redoActionTypePrefix + id\n    });\n    if (action && action.meta && action.meta.undoableCache) {\n      store.dispatch({\n        type: action.meta.undoableCache.type,\n        payload: action.meta.undoableCache.payload,\n        meta: action.meta.undoableCache.meta\n      });\n      delete action.meta.undoableCache;\n    }\n  });\n};\n\nexport const createUndoableMutator = function({\n  id,\n  actionFilter\n}: {\n  id: string;\n  actionFilter?: ActionFilter;\n}) {\n  return typeMutator(function(\n    state: UndoableMutatorState = observable({ past: [], future: [] }),\n    action\n  ) {\n    if (action.type === undoActionTypePrefix + id) {\n      // Handle undo\n\n      if (state.past.length === 0) {\n        return state;\n      }\n\n      const pastAction = state.past.pop();\n      notify(state, \"past\");\n\n      if (!pastAction) {\n        console.log(\"this actually happens\");\n        return state;\n      }\n\n      setUndoableCache(action, {\n        type: pastAction.type,\n        payload: pastAction.payload,\n        meta: { ...pastAction.meta, do: false, redo: false, undo: true }\n      });\n\n      state.future.push(pastAction);\n      notify(state, \"future\");\n    } else if (action.type === redoActionTypePrefix + id) {\n      // Handle redo\n\n      if (state.future.length === 0) {\n        return state;\n      }\n\n      const futureAction = state.future.pop();\n      notify(state, \"future\");\n\n      if (!futureAction) {\n        return state;\n      }\n\n      setUndoableCache(action, {\n        type: futureAction.type,\n        payload: futureAction.payload,\n        meta: { ...futureAction.meta, do: true, redo: true, undo: false }\n      });\n\n      state.past.push(futureAction);\n      notify(state, \"past\");\n    } else {\n      // Handle new actions\n\n      if (action.type == actionTypes.INIT) {\n        return state;\n      }\n\n      if (action.meta.undo || action.meta.redo) {\n        return state;\n      }\n\n      if (actionFilter && !actionFilter(action)) {\n        return state;\n      }\n\n      state.future = [];\n      notify(state, \"future\");\n\n      state.past.push({\n        type: action.type,\n        payload: action.payload,\n        meta: action.meta\n      });\n      notify(state, \"past\");\n    }\n\n    return state;\n  });\n};\n","import { AbstractActionNormalizerDecorator } from \".\";\nimport { NormalizeOptions } from \"./types\";\n\nexport class DateActionNormalizerDecorator extends AbstractActionNormalizerDecorator {\n  normalize(options: NormalizeOptions) {\n    options.action.meta.date = new Date();\n\n    return this._actionNormalizer.normalize(options);\n  }\n}\n","import { AbstractActionNormalizerDecorator } from \".\";\nimport { NormalizeOptions } from \"./types\";\n\nexport class UndoableActionNormalizerDecorator extends AbstractActionNormalizerDecorator {\n  normalize(options: NormalizeOptions) {\n    if (options.action.meta.undoData) {\n      options.action.meta.undoData = { ...options.action.meta.undoData };\n    }\n\n    return this._actionNormalizer.normalize(options);\n  }\n}\n","import { StoreDispatchApi, NewAction, Action } from \"../main/core\";\n\nexport const dispatchPromise = function(\n  store: StoreDispatchApi,\n  promise: Promise<NewAction>\n): Promise<Action | undefined> {\n  return promise.then(function(action) {\n    return store.dispatch(action);\n  });\n};\n","import { StoreDispatchApi, NewAction, Action } from \"../main/core\";\n\nexport const dispatchActions = function(\n  store: StoreDispatchApi,\n  actions: NewAction[]\n) {\n  let result: Action[] = [];\n\n  for (const action of actions) {\n    const dispatchedAction = store.dispatch(action);\n    if (dispatchedAction) {\n      result.push(dispatchedAction);\n    }\n  }\n\n  return result;\n};\n"],"sourceRoot":""}